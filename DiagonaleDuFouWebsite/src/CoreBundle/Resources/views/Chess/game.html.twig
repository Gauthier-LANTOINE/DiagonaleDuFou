{% extends "CoreBundle::layout.html.twig" %}

{% block title %}{{ parent() }} - Jeu{% endblock %}

{% block stylesheets %}
    {{parent()}}
    <link rel="stylesheet" href="{{ asset('chessboardjs-0.3.0/css/chessboard-0.3.0.css') }}" />
{% endblock %}

{% block core_body %}
    <div class="row">
        <div class="well col-lg-4">
            <h3>Adversaire</h3>
            <p>
                Prénom: {{ opponent.firstName }} 
            </p>
            <p>
                Nom: {{ opponent.lastName }}
            </p>
        </div>
    </div>
    <div class="row">

        <div class="col-lg-9 ">

            {# Plateau d'échecs #}
            <div id="board"></div>

            {% if drawOffer == true %}
                <div class="jumbotron">
                    <p>Votre Adversaire vous a fait une offre de nulle.</p>
                    <div>
                        <a href="{{ path('core_game_accept_draw', {'id' : chessGame.id }) }}" id="acceptOffer" class="btn btn-success">
                            Accepter
                        </a>
                        <a id="refuseOffer" class="btn btn-danger">
                            Refuser
                        </a>
                    </div>
                </div>
            {%endif%}
            <a href="{{ path('core_list_current_game') }}" class="btn btn-primary">
                Retour
            </a>
        </div>
        <div class="col-lg-3 chess-history">
            {# Formulaire d'envoie des coups #}
            {{ include("CoreBundle:Chess:moveForm.html.twig") }}

            <button id="removeMove" class="btn btn-danger">Annuler</button>
            
            {# Historique de la partie #}
            <div class="history-chess well">
                <table class="table table-bordered text-center chess-history">
                    <tbody>
                    <thead>
                        <tr>
                            <th colspan="2" class="text-center">Historique</th>
                        </tr>
                    </thead>
                    {% for i in 1..chessGame.sanHistory.w|length %}
                        <tr>
                            <td>
                                {% if chessGame.sanHistory.w[loop.index0].san is defined %}
                                    <a id="{{chessGame.sanHistory.w[loop.index0].fen}}">
                                        {{chessGame.sanHistory.w[loop.index0].san}}
                                    </a>
                                {%endif%}
                            </td>
                            <td>
                                {% if chessGame.sanHistory.b[loop.index0].san is defined %}
                                    <a id="{{chessGame.sanHistory.b[loop.index0].fen}}">
                                        {{chessGame.sanHistory.b[loop.index0].san}}
                                    </a>
                                {%endif%}
                            </td>

                        </tr>
                    {% endfor %}

                    </tbody>
                </table>
            </div>
            <a href="{{ path('core_game_surrender', {'id' : chessGame.id }) }}" class="btn btn-danger">
                Abandonner
            </a>

        </div>

    </div>
{% endblock %}

{% block javascripts %}
    {{parent()}}
    <script src="{{ asset('chessboardjs-0.3.0/js/chessboard-0.3.0.min.js') }}"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/chess.js/0.10.2/chess.js" 
            integrity="sha256-To0zAGgoGF+e5+ZxzSOgppWPfCozoOcOwFCQ0cbGsjA=" 
    crossorigin="anonymous"></script>
    <script>
        var game = new Chess('{{ chessGame.fen }}');
        //Autorise uniquement le joueur au tour à jouer les coups pour son camps
        var onDragStart = function (source, piece, position, orientation) {

            if (game.game_over() === true ||
                    (game.turn() === 'w' && piece.search(/^b/) !== -1) ||
                    (game.turn() === 'b' && piece.search(/^w/) !== -1) ||
                    (game.turn() === 'w' && orientation === 'black') ||
                    (game.turn() === 'b' && orientation === 'white') ||
                    game.fen().split(" ", 1)[0] !== board.fen()) {

                return false;
            }

        };

        var onDrop = function (source, target) {
            // regarde si le coup est légal
            var move = game.move({
                from: source,
                to: target,
                promotion: 'q'
            });

            $('#corebundle_move_fromSquare').val(source);
            $('#corebundle_move_toSquare').val(target);

            // en cas de coup illégal
            if (move === null)
                return 'snapback';
        };

        // met à jour la position en cas de prise en passant, de roque et de promotion de pion
        var onSnapEnd = function () {
            board.position(game.fen());
        };
        $("#removeMove").click(function () {

            $('#from').val('');
            $('#to').val('');
            game.undo();
            board.position(game.fen());
        });

        $('.chess-history a').click(function () {
            var id = $(this).attr('id');
            board.position(id);
            if (game.fen() !== '{{ chessGame.fen }}')
            {
                game.undo();
            }
        });


        var cfg = {
            position: '{{ chessGame.fen }}',
            pieceTheme: '{{ asset('chessboardjs-0.3.0/img/chesspieces/wikipedia/{piece}.png') }}',
            draggable: true,
            orientation: '{{ orientation }}',
            onDragStart: onDragStart,
            onDrop: onDrop,
            onSnapEnd: onSnapEnd
        };

        var board = ChessBoard('board', cfg);

        $(window).resize(board.resize);
    </script>

{% endblock %}
