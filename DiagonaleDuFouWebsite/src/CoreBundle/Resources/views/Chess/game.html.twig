{% extends "CoreBundle::layout.html.twig" %}

{% block title %}{{ parent() }} - Jeu{% endblock %}

{% block stylesheets %}
    {{parent()}}
    <link rel="stylesheet" href="{{ asset('chessboardjs-0.3.0/css/chessboard-0.3.0.css') }}" />
{% endblock %}

{% block core_body %}
    <h3 >Adversaire</h3>
    <p>
        {{ opponent.firstName }} {{ opponent.lastName }}
    </p>

    <div id="board" style="width: 400px"></div>
    <form action="{{ path('core_play_game_validate', {'id': chessGame.id}) }}" method="post">
    
    <input type="hidden" value="" id="from" name="from">
    <input type="hidden" value="" id="to" name="to">
    <input type="hidden" value="q" id="promotion" name="promotion">
        
    
    <input type="submit" value="Valider" class="btn btn-success" />
    
    {{ form_rest(form) }}
  </form>
  
  <button id="removeMove" class="btn btn-danger">Annuler</button>
  
  

{% endblock %}

{% block javascripts %}
    {{parent()}}
    <script src="{{ asset('chessboardjs-0.3.0/js/chessboard-0.3.0.min.js') }}"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/chess.js/0.10.2/chess.js" 
            integrity="sha256-To0zAGgoGF+e5+ZxzSOgppWPfCozoOcOwFCQ0cbGsjA=" 
    crossorigin="anonymous"></script>
    <script>
        var game = new Chess('{{ chessGame.fen }}');
        //Autorise uniquement le joueur au tour à jouer les coups pour son camps
        var onDragStart = function (source, piece, position, orientation) {

            if (game.game_over() === true ||
                    (game.turn() === 'w' && piece.search(/^b/) !== -1) ||
                    (game.turn() === 'b' && piece.search(/^w/) !== -1) ||
                    (game.turn() === 'w' && orientation === 'black') ||
                    (game.turn() === 'b' && orientation === 'white')) {

                return false;
            }
        };

        var onDrop = function (source, target) {
            // regarde si le coup est légal
            var move = game.move({
                from: source,
                to: target,
                promotion: 'q'
            });
            
            $('#from').val(source);
            $('#to').val(target);

            // en cas de coup illégal
            if (move === null)
                return 'snapback';
        };

        // met à jour la position en cas de prise en passant, de roque et de promotion de pion
        var onSnapEnd = function () {
            board.position(game.fen());
        };
        $( "#removeMove" ).click(function() {
            
            $('#from').val('');
            $('#to').val('');
            game.undo();
            board.position(game.fen());
        });
        
        var cfg = {
            position: '{{ chessGame.fen }}',
            pieceTheme: '{{ asset('chessboardjs-0.3.0/img/chesspieces/wikipedia/{piece}.png') }}',
            draggable: true,
            orientation: '{{ orientation }}',
            onDragStart: onDragStart,
            onDrop: onDrop,
            onSnapEnd: onSnapEnd
        };
        
        var board = ChessBoard('board', cfg);
    </script>

{% endblock %}
